version: "3.3"

services:
  api:
    build:
      context: .
    image: microservices
    env_file: docker-compose.env
    environment:
      SERVICES: gateway
      PORT: 3000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(/)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal

  car:
    build:
      context: .
    image: microservices
    env_file: docker-compose.env
    environment:
      SERVICES: car
    depends_on:
      - car_db
      - nats
    networks:
      - internal
      
  garage:
    build:
      context: .
    image: microservices
    env_file: docker-compose.env
    environment:
      SERVICES: garage
    depends_on:
      - garage_db
      - nats
    networks:
      - internal
      

  car_db:
    image: postgres:10.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_USER=postgres
      - APP_DB_PASS=postgres
      - APP_DB_NAME=car_db
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5438:5432'
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./db/car_db.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - internal
  garage_db:
    image: postgres:10.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_USER=postgres
      - APP_DB_PASS=postgres
      - APP_DB_NAME=garage_db
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5438:5432'
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./db/garage_db.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - internal
    
  postgres:
    image: postgres:10.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_USER=postgres
      - APP_DB_PASS=postgres
      - APP_DB_NAME=medicalapp
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5438:5432'
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - internal

  nats:
    image: nats:2
    networks:
      - internal

  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

networks:
  internal:

volumes:
  data: 
  